---
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import ClientRouter from 'astro/components/ClientRouter.astro';

interface Props {
    title?: string;
    description?: string;
    image?: ImageMetadata | string;
}

const { 
    title = SITE_TITLE, 
    description = SITE_DESCRIPTION,
    image = '/og-image.png'
} = Astro.props;

// Create full URLs
const siteUrl = 'https://cococalcs.jpshlk.com';
const currentPath = Astro.url.pathname;
const fullUrl = `${siteUrl}${currentPath}`;

// Log the image object to see its structure in dev
console.log('Image object:', image);

// Handle optimized image URLs
const ogImageUrl = typeof image === 'string' 
    ? `${siteUrl}${image}`
    : `${siteUrl}${image?.src}`;
---

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="description" content={SITE_DESCRIPTION} />
    <meta name="theme-color" content="#121827" />
    
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    
    <!-- <link rel="icon" type="image/svg+xml" href="/favicon.svg" /> -->
    <meta name="generator" content={Astro.generator} />
    
    <title>{title}</title>
    
    <!-- Open Graph / Social Media Meta Tags -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImageUrl} />
    <meta property="og:url" content={fullUrl} />
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="CocoCalcs" />
    
    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content={ogImageUrl} />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    
    <!-- iOS specific -->
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />
    <ClientRouter />
</head>