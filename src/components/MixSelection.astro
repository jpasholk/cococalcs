---
import Card from './Card.astro';
import Button from './Button.astro';
import { INGREDIENTS } from '../consts';

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<Card>
  <div class="mb-4">
    <h2 class="text-2xl sm:text-4xl font-bold text-gray-900 dark:text-gray-200">{title}</h2>
  </div>
  
  <div class="space-y-2 sm:space-y-4">
    <div class="relative">
      <button 
        id="mixDropdownButton" 
        type="button"
        data-dropdown="mixDropdown"
        class="w-full text-left bg-white dark:bg-gray-700 hover:bg-gray-100 dark:hover:bg-gray-600 focus:ring-4 focus:outline-none focus:ring-indigo-500 dark:focus:ring-indigo-800 font-medium rounded-lg text-sm px-4 py-2.5 inline-flex items-center justify-between border border-gray-400 dark:border-gray-600"
      >
        <span class="text-gray-900 dark:text-gray-100">Select Ingredients</span>
        <svg class="w-2.5 h-2.5 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/>
        </svg>
      </button>

      <div 
        id="mixDropdown"
        class="dropdown-content hidden bg-white divide-y divide-gray-100 rounded-lg shadow-sm w-full mt-2 dark:bg-gray-700 dark:divide-gray-600"
      >
        <div class="p-3">
          <ul class="space-y-1 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="mixDropdownButton">
            {INGREDIENTS.map(ingredient => (
              <li>
                <div class="flex p-2 rounded-sm hover:bg-gray-100 dark:hover:bg-gray-600">
                  <label class="inline-flex items-center justify-between w-full cursor-pointer">
                    <div class="flex items-center gap-2">
                      <input
                        type="checkbox"
                        id={ingredient.id}
                        name="ingredients[]"
                        value={ingredient.id}
                        checked={ingredient.defaultChecked}
                        class="sr-only peer"
                      />
                      <div class="relative w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-indigo-300 dark:peer-focus:ring-indigo-800 rounded-full peer dark:bg-gray-600 peer-checked:after:translate-x-full rtl:peer-checked:after:translate-x-[-100%] peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all dark:border-gray-500 peer-checked:bg-indigo-600"></div>
                      <span class="ms-3 text-sm font-medium text-gray-900 dark:text-gray-100">
                        {ingredient.name}
                      </span>
                    </div>
                    <div 
                      id={`badge-${ingredient.id}`}
                      class={`opacity-0 peer-checked:opacity-100 transition-opacity duration-200 ${ingredient.bgClass} ${ingredient.textClass} ${ingredient.borderClass} px-4 py-0.5 rounded-full text-xs font-medium min-w-[4rem] text-center`}
                    >
                      <span class="badge-percentage">0%</span>
                    </div>
                  </label>
                </div>
              </li>
            ))}
          </ul>
        </div>
      </div>
    </div>

    <Button
      type="button"
      id="calculateButton"
      variant="primary"
      fullWidth
    >
      Calculate
    </Button>
  </div>
</Card>